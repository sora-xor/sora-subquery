@Library('jenkins-library')

String agentLabel        = 'docker-build-agent'
String envImageName      = 'node:16-buster-slim'
String subqueryToken     = 'subquery-token'
String targetEnvironment =  getEnvFromJobName()
String jobList           = '../sora2-' + targetEnvironment
List   jobParams         = [ string(defaultValue: targetEnvironment, name: 'targetEnvironment', trim: true) ]
String endpoint          =  targetEnvironment == 'dev' ? '3.s3.dev' : '1.v1.tst'

properties([
    parameters( jobParams ),
    pipelineTriggers([upstream( jobList )])
])

pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        timestamps()
        disableConcurrentBuilds()
    }
    agent {
        docker {
            label agentLabel
            image envImageName
        }
    }   

    stages {
        stage('Install Dependicies & Deploy') {
            environment {
                SUBQUERY_CLI_VERSION = '0.2.3'
                SUBQUERY_ORG =  'sora-xor'
                matrix_chain = "sora-${targetEnvironment}"
                SUBQUERY_TOKEN = credentials("${subqueryToken}")
                
            }
            steps {
                script {
                    sh """
                       set -xe
                       export SUBQL_ACCESS_TOKEN=${SUBQUERY_TOKEN}
                       npm install -g @subql/cli
					   subql publish
                       subql deployment:deploy \
                           --org=${SUBQUERY_ORG} \
                           --projectName=${matrix_chain} \
                           --indexerVersion=v0.31.1 \
                           --queryVersion=v0.13.0 \
                           --endpoint=wss://ws.framenode-${endpoint}.sora2.soramitsu.co.jp
                       echo "New deployment is executed"
                    """
                }
            }
        }
    }
    post {
        cleanup { cleanWs() }
      }
   }